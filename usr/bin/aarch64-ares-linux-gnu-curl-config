#! /bin/sh
#***************************************************************************
#                                  _   _ ____  _
#  Project                     ___| | | |  _ \| |
#                             / __| | | | |_) | |
#                            | (__| |_| |  _ <| |___
#                             \___|\___/|_| \_\_____|
#
# Copyright (C) 2001 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
#
# This software is licensed as described in the file COPYING, which
# you should have received as part of this distribution. The terms
# are also available at https://curl.se/docs/copyright.html.
#
# You may opt to use, copy, modify, merge, publish, distribute and/or sell
# copies of the Software, and permit persons to whom the Software is
# furnished to do so, under the terms of the COPYING file.
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
# KIND, either express or implied.
#
###########################################################################

prefix=/usr
exec_prefix=${prefix}
includedir=${prefix}/include
cppflag_curl_staticlib=

usage()
{
    cat <<EOF
Usage: curl-config [OPTION]

Available values for OPTION include:

  --built-shared says 'yes' if libcurl was built shared
  --ca        ca bundle install path
  --cc        compiler
  --cflags    pre-processor and compiler flags
  --checkfor [version] check for (lib)curl of the specified version
  --configure the arguments given to configure when building curl
  --features  newline separated list of enabled features
  --help      display this help and exit
  --libs      library linking information
  --prefix    curl install prefix
  --protocols newline separated list of enabled protocols
  --ssl-backends output the SSL backends libcurl was built to support
  --static-libs static libcurl library linking information
  --version   output version information
  --vernum    output the version information as a number (hexadecimal)
EOF

    exit $1
}

if test $# -eq 0; then
    usage 1
fi

while test $# -gt 0; do
    case "$1" in
    # this deals with options in the style
    # --option=value and extracts the value part
    # [not currently used]
    -*=*) value=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *) value= ;;
    esac

    case "$1" in
    --built-shared)
        echo yes
        ;;

    --ca)
        echo "/etc/ssl/certs/ca-certificates.crt"
        ;;

    --cc)
        echo "aarch64-ares-linux-gnu-gcc"
        ;;

    --prefix)
        echo "$prefix"
        ;;

    --feature|--features)
        for feature in HTTP2 HTTPS-proxy IPv6 NTLM SSL TLS-SRP UnixSockets libz zstd ""; do
            test -n "$feature" && echo "$feature"
        done
        ;;

    --protocols)
        for protocol in DICT FILE FTP FTPS HTTP HTTPS IMAP IMAPS MQTT POP3 POP3S RTSP SMTP SMTPS TFTP; do
            echo "$protocol"
        done
        ;;

    --version)
        echo libcurl 7.74.0
        exit 0
        ;;

    --checkfor)
        checkfor=$2
        cmajor=`echo $checkfor | cut -d. -f1`
        cminor=`echo $checkfor | cut -d. -f2`
        # when extracting the patch part we strip off everything after a
        # dash as that's used for things like version 1.2.3-CVS
        cpatch=`echo $checkfor | cut -d. -f3 | cut -d- -f1`

        vmajor=`echo 7.74.0 | cut -d. -f1`
        vminor=`echo 7.74.0 | cut -d. -f2`
        # when extracting the patch part we strip off everything after a
        # dash as that's used for things like version 1.2.3-CVS
        vpatch=`echo 7.74.0 | cut -d. -f3 | cut -d- -f1`

        if test "$vmajor" -gt "$cmajor"; then
            exit 0;
        fi
        if test "$vmajor" -eq "$cmajor"; then
            if test "$vminor" -gt "$cminor"; then
                exit 0
            fi
            if test "$vminor" -eq "$cminor"; then
                if test "$cpatch" -le "$vpatch"; then
                    exit 0
                fi
            fi
        fi

        echo "requested version $checkfor is newer than existing 7.74.0"
        exit 1
        ;;

    --vernum)
        echo 074a00
        exit 0
        ;;

    --help)
        usage 0
        ;;

    --cflags)
        if test "X$cppflag_curl_staticlib" = "X-DCURL_STATICLIB"; then
          CPPFLAG_CURL_STATICLIB="-DCURL_STATICLIB "
        else
          CPPFLAG_CURL_STATICLIB=""
        fi
        if test "X${prefix}/include" = "X/usr/include"; then
          echo "$CPPFLAG_CURL_STATICLIB"
        else
          echo "${CPPFLAG_CURL_STATICLIB}-I${prefix}/include"
        fi
        ;;

    --libs)
        if test "X/usr/lib64" != "X/usr/lib" -a "X/usr/lib64" != "X/usr/lib64"; then
           CURLLIBDIR="-L/usr/lib64 "
        else
           CURLLIBDIR=""
        fi
        if test "Xyes" = "Xno"; then
          echo ${CURLLIBDIR}-lcurl -lnghttp2 -lssl -lcrypto -lssl -lcrypto -lzstd -lzstd -lz
        else
          echo ${CURLLIBDIR}-lcurl
        fi
        ;;
    --ssl-backends)
        echo "OpenSSL"
        ;;

    --static-libs)
        if test "Xno" != "Xno" ; then
          echo /usr/lib64/libcurl.a -Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu -Wl,--enable-new-dtags -flto -fuse-linker-plugin -Wl,-fuse-ld=gold -lnghttp2 -lssl -lcrypto -lssl -lcrypto -lzstd -lzstd -lz
        else
          echo "curl was built with static libraries disabled" >&2
          exit 1
        fi
        ;;

    --configure)
        echo " '--prefix=/usr' '--build=aarch64-ares-linux-gnu' '--host=aarch64-ares-linux-gnu' '--mandir=/usr/share/man' '--infodir=/usr/share/info' '--datadir=/usr/share' '--sysconfdir=/etc' '--localstatedir=/var/lib' '--disable-dependency-tracking' '--disable-silent-rules' '--docdir=/usr/share/doc/curl-7.74.0-r2' '--htmldir=/usr/share/doc/curl-7.74.0-r2/html' '--with-sysroot=/' '--libdir=/usr/lib64' '--disable-alt-svc' '--enable-crypto-auth' '--enable-dict' '--disable-ech' '--enable-file' '--enable-ftp' '--disable-gopher' '--disable-hsts' '--enable-http' '--enable-imap' '--disable-ldap' '--disable-ldaps' '--disable-ntlm-wb' '--enable-pop3' '--enable-rt' '--enable-rtsp' '--disable-smb' '--without-libssh2' '--enable-smtp' '--disable-telnet' '--enable-tftp' '--enable-tls-srp' '--disable-ares' '--enable-cookies' '--enable-dateparse' '--enable-dnsshuffle' '--enable-doh' '--enable-hidden-symbols' '--enable-http-auth' '--enable-ipv6' '--enable-largefile' '--enable-manual' '--enable-mime' '--enable-netrc' '--enable-progress-meter' '--enable-proxy' '--disable-sspi' '--disable-static' '--disable-threaded-resolver' '--disable-pthreads' '--disable-versioned-symbols' '--without-amissl' '--without-bearssl' '--without-cyassl' '--without-darwinssl' '--without-fish-functions-dir' '--without-libidn2' '--without-gssapi' '--without-libmetalink' '--with-nghttp2' '--without-libpsl' '--without-nghttp3' '--without-ngtcp2' '--without-quiche' '--without-librtmp' '--without-brotli' '--without-schannel' '--without-secure-transport' '--without-spnego' '--without-winidn' '--without-wolfssl' '--with-zlib' '--with-zstd' '--without-gnutls' '--without-mbedtls' '--without-nss' '--without-polarssl' '--without-ssl' '--without-winssl' '--without-ca-fallback' '--with-ca-bundle=/etc/ssl/certs/ca-certificates.crt' '--with-ssl' '--with-ca-path=/etc/ssl/certs' '--with-default-ssl-backend=openssl' 'build_alias=aarch64-ares-linux-gnu' 'host_alias=aarch64-ares-linux-gnu' 'CC=aarch64-ares-linux-gnu-gcc' 'CFLAGS=-O2 -pipe -fno-ident -fexcess-precision=fast -fomit-frame-pointer -mcpu=native --param l1-cache-size=64 --param l1-cache-line-size=64 --param l2-cache-size=1024 -flto -fuse-linker-plugin' 'LDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu -Wl,--enable-new-dtags -flto -fuse-linker-plugin -Wl,-fuse-ld=gold'"
        ;;

    *)
        echo "unknown option: $1"
        usage 1
        ;;
    esac
    shift
done

exit 0
